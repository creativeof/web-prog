ES6

変数
let name = "Jone";
定数
const name = "Jone"

ES6 変数名
英単語
２語以上の場合は大文字で区切る

テンプレートリテラル
文字列の中に定数（変数）を埋め込むことができる
console.log(`ぼくの名前は${name}です`);

比較演算子
a === b
a !== b
数値と文字列に使える


let number = 1;
while (number <= 100) {
  console.log(number);
  number++;
}

for (let number = 1; number <= 100; number ++) {
  if (number % 3 === 0) {
    console.log("3の倍数です");
  } else {
    console.log(number);
  }
}

配列を代入する変数名は、慣習上複数形にすることが多い
[値1, 値2, 値3]
const animals = ["dog", "cat", "sheep"];
for (let i = 0; i < animals.length; i++) {
  console.log(animals[i]);
}

オブジェクト
{プロパティ1: 値1, プロパティ2: 値2}
配列は複数の値を並べて管理するのに対して、
オブジェクトはそれぞれの値にプロパティと呼ばれる名前をつけて管理。
const character = {name: "にんじゃわんこ", age: 14};

const characters = [
  {name: "にんじゃわんこ", age: 14},
  {name: "ひつじ仙人", age: 100},
  {name: "ベイビーわんこ", age: 5},
  {name: "とりずきん"}
];

for (let i = 0; i < characters.length; i++) {
  console.log("--------------------");
  const character = characters[i];
  console.log(`名前は${character.name}です`);

  // undefined対応
  if (character.age === undefined) {
    console.log('年齢は秘密です');
  } else {
    console.log(`${character.age}歳です`);
  }
}

複雑なオブジェクト
const cafe = {
  name: "Progateカフェ",
  businessHours: {
    opening: "10:00(AM)",
    closing: "8:00(PM)"
  },
  menus: [ "コーヒー", "紅茶", "チョコレートケーキ"]
};

console.log(`店名: ${cafe.name}`);
console.log(`営業時間:${cafe.businessHours.opening}から${cafe.businessHours.closing}`);
console.log(`----------------------------`);
console.log("おすすめメニューはこちら");
for (let i = 0; i < cafe.menus.length; i++) {
  console.log(cafe.menus[i]);
}


関数の定義
const greet = function() {
  console.log("こんにちは！");
};
greet();

アロー関数
「function()」の部分を「() =>」としても、
同じ用に関数を定義することができます。これはES6から導入された新しい書き方
const greet = () => {
  console.log("こんにちは！");
};
greet();

const dollarYenRate = 110;
const convertToYen = (priceDollar) => {
  return priceDollar * dollarYenRate;
};
const information = (name, price) => {
  console.log(`アメリカドルで${name}は${price}ドルです`);
  const priceYen = convertToYen(price);
  console.log(`日本円で${name}は${priceYen}円です`);
  console.log('--------------');
};
information("香水", 48);
